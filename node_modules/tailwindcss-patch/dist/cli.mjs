import cac from 'cac';
import { configName, getConfig, initConfig } from '@tailwindcss-mangle/config';
import { getPatchOptions, TailwindcssPatcher, createPatch } from './index.mjs';
import 'node:path';
import 'node:fs';
import 'node:fs/promises';
import 'resolve';
import '@babel/types';
import 'semver';
import '@babel/generator';
import '@babel/traverse';
import '@babel/parser';
import 'postcss';
import 'lilconfig';
import 'jiti';

function init() {
  const cwd = process.cwd();
  return initConfig(cwd);
}
const cli = cac();
cli.command("install", "patch install").action(() => {
  const opt = getPatchOptions();
  const patch = createPatch(opt);
  patch();
});
cli.command("init").action(async () => {
  await init();
  console.log(`\u2728 ${configName}.config.ts initialized!`);
});
cli.command("extract").action(async () => {
  const { config } = await getConfig();
  if (config) {
    const twPatcher = new TailwindcssPatcher();
    const p = await twPatcher.extract(config.patch);
    console.log("\u2728 tailwindcss-patch extract success! file path: " + p);
  }
});
cli.help();
cli.parse();
