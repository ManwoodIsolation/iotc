'use strict';

const path = require('node:path');
const fs = require('node:fs/promises');
const c12 = require('c12');
const dedent = require('dedent');
const shared = require('@tailwindcss-mangle/shared');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e.default : e; }

const path__default = /*#__PURE__*/_interopDefaultCompat(path);
const fs__default = /*#__PURE__*/_interopDefaultCompat(fs);
const dedent__default = /*#__PURE__*/_interopDefaultCompat(dedent);

function getDefaultPatchConfig() {
  return {
    output: {
      filename: ".tw-patch/tw-class-list.json",
      removeUniversalSelector: true,
      loose: true
    },
    tailwindcss: {}
  };
}
function getDefaultMangleUserConfig() {
  return {
    mangleClassFilter: shared.defaultMangleClassFilter,
    include: ["**/*.{js,jsx,ts,tsx,svelte,vue}"],
    exclude: ["node_modules/**/*", "**/*.{css,scss,less,sass,postcss,html,htm}"],
    disabled: process.env.NODE_ENV === "development",
    classListPath: ".tw-patch/tw-class-list.json",
    classMapOutput: {
      enable: false,
      filename: ".tw-patch/tw-map-list.json",
      loose: true
    },
    preserveFunction: []
  };
}
function getDefaultUserConfig() {
  return {
    patch: getDefaultPatchConfig(),
    mangle: getDefaultMangleUserConfig()
  };
}

const configName = "tailwindcss-mangle";

function getConfig(cwd) {
  return c12.loadConfig({
    name: configName,
    defaults: {
      ...getDefaultUserConfig()
    },
    cwd
  });
}
const defineConfig = c12.createDefineConfig();
function initConfig(cwd) {
  return fs__default.writeFile(
    path__default.resolve(cwd, `${configName}.config.ts`),
    dedent__default`
      import { defineConfig } from 'tailwindcss-patch'

      export default defineConfig({})
    `,
    "utf8"
  );
}

exports.configName = configName;
exports.defineConfig = defineConfig;
exports.getConfig = getConfig;
exports.getDefaultMangleUserConfig = getDefaultMangleUserConfig;
exports.getDefaultPatchConfig = getDefaultPatchConfig;
exports.getDefaultUserConfig = getDefaultUserConfig;
exports.initConfig = initConfig;
